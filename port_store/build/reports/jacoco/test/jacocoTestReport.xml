<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="port_store"><sessioninfo id="jamhost-4bfe8d77" start="1632563495924" dump="1632563502604"/><package name="com/hexagonkt/store/hashmap"><class name="com/hexagonkt/store/hashmap/HashMapMapper$fields$2" sourcefilename="HashMapMapper.kt"><method name="invoke" desc="()Ljava/util/Map;" line="15"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/hexagonkt/store/hashmap/HashMapMapper" sourcefilename="HashMapMapper.kt"><method name="&lt;init&gt;" desc="(Lkotlin/reflect/KClass;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFields" desc="()Ljava/util/Map;" line="14"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toStore" desc="(Ljava/lang/Object;)Ljava/util/Map;" line="19"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromStore" desc="(Ljava/util/Map;)Ljava/lang/Object;" line="26"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromStore" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toStore" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="12"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/hexagonkt/store/hashmap/HashMapMapper$fields$2$1" sourcefilename="HashMapMapper.kt"><method name="invoke" desc="()Ljava/util/Collection;" line="15"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/hexagonkt/store/hashmap/HashMapStore" sourcefilename="HashMapStore.kt"><method name="&lt;init&gt;" desc="(Lkotlin/reflect/KClass;Lkotlin/reflect/KProperty1;Ljava/lang/String;Ljava/util/HashMap;Lcom/hexagonkt/store/Mapper;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lkotlin/reflect/KClass;Lkotlin/reflect/KProperty1;Ljava/lang/String;Ljava/util/HashMap;Lcom/hexagonkt/store/Mapper;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="11"><counter type="INSTRUCTION" missed="9" covered="29"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lkotlin/reflect/KClass;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Lkotlin/reflect/KProperty1;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMapper" desc="()Lcom/hexagonkt/store/Mapper;" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createIndex" desc="(ZLjava/util/Map;)Ljava/lang/String;" line="19"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertOne" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertMany" desc="(Ljava/util/List;)Ljava/util/List;" line="28"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="saveOne" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="36"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="saveMany" desc="(Ljava/util/List;)Ljava/util/List;" line="47"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceOne" desc="(Ljava/lang/Object;)Z" line="51"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceMany" desc="(Ljava/util/List;)Ljava/util/List;" line="55"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateOne" desc="(Ljava/lang/Object;Ljava/util/Map;)Z" line="59"><counter type="INSTRUCTION" missed="1" covered="65"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateMany" desc="(Ljava/util/Map;Ljava/util/Map;)J" line="73"><counter type="INSTRUCTION" missed="1" covered="41"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteOne" desc="(Ljava/lang/Object;)Z" line="79"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteMany" desc="(Ljava/util/Map;)J" line="82"><counter type="INSTRUCTION" missed="1" covered="37"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findOne" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findOne" desc="(Ljava/lang/Object;Ljava/util/List;)Ljava/util/Map;" line="93"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMany" desc="(Ljava/util/Map;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/util/Map;)Ljava/util/List;" line="104"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMany" desc="(Ljava/util/Map;Ljava/util/List;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/util/Map;)Ljava/util/List;" line="121"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="count" desc="(Ljava/util/Map;)J" line="130"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="drop" desc="()V" line="133"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="map" desc="(Ljava/lang/Object;)Ljava/util/Map;" line="135"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filter" desc="(Ljava/util/HashMap;Ljava/util/Map;)Ljava/util/List;" line="138"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsValues" desc="(Ljava/util/Map;Ljava/util/Map;)Z" line="142"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="paginate" desc="(Ljava/util/List;II)Ljava/util/List;" line="150"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="(Ljava/util/List;Ljava/util/Map;)Ljava/util/List;" line="159"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createIndex" desc="(Z[Lkotlin/Pair;)Ljava/lang/String;" line="11"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createIndex" desc="(Z[Lkotlin/reflect/KProperty1;)Ljava/lang/String;" line="11"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fields" desc="(Ljava/util/Map;)Ljava/util/Map;" line="11"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fields" desc="([Lkotlin/Pair;)Ljava/util/Map;" line="11"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAll" desc="(Ljava/util/List;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/util/Map;)Ljava/util/List;" line="11"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAll" desc="(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/util/Map;)Ljava/util/List;" line="11"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findOne" desc="(Ljava/util/Map;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findOne" desc="(Ljava/util/Map;Ljava/util/List;)Ljava/util/Map;" line="11"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="import" desc="(Ljava/io/File;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="import" desc="(Ljava/net/URL;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertMany" desc="([Ljava/lang/Object;)Ljava/util/List;" line="11"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceMany" desc="([Ljava/lang/Object;)Ljava/util/List;" line="11"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateOne" desc="(Ljava/lang/Object;[Lkotlin/Pair;)Z" line="11"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="35" covered="770"/><counter type="BRANCH" missed="8" covered="38"/><counter type="LINE" missed="0" covered="69"/><counter type="COMPLEXITY" missed="13" covered="51"/><counter type="METHOD" missed="5" covered="36"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/hexagonkt/store/hashmap/HashMapStore$sort$$inlined$sortedBy$1" sourcefilename="Comparisons.kt"><method name="compare" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="102"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="HashMapMapper.kt"><line nr="12" mi="0" ci="11" mb="0" cb="0"/><line nr="14" mi="0" ci="19" mb="0" cb="0"/><line nr="15" mi="0" ci="27" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="16" mb="0" cb="0"/><line nr="22" mi="0" ci="12" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="112"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Comparisons.kt"><line nr="102" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HashMapStore.kt"><line nr="11" mi="19" ci="63" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="11" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="9" mb="0" cb="0"/><line nr="16" mi="0" ci="11" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="20" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="20" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="15" mb="0" cb="0"/><line nr="36" mi="0" ci="8" mb="0" cb="2"/><line nr="37" mi="0" ci="20" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="20" mb="0" cb="0"/><line nr="43" mi="0" ci="11" mb="0" cb="0"/><line nr="47" mi="0" ci="14" mb="0" cb="0"/><line nr="51" mi="0" ci="15" mb="0" cb="2"/><line nr="55" mi="0" ci="22" mb="0" cb="4"/><line nr="59" mi="0" ci="7" mb="0" cb="2"/><line nr="61" mi="0" ci="14" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="21" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="1" ci="9" mb="1" cb="1"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="1" ci="29" mb="2" cb="2"/><line nr="79" mi="0" ci="9" mb="0" cb="2"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="1" ci="28" mb="2" cb="2"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="20" mb="0" cb="2"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="21" mb="0" cb="2"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="16" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="21" mb="0" cb="4"/><line nr="111" mi="0" ci="12" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="19" mb="1" cb="1"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="19" mb="0" cb="4"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="8" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="12" mb="1" cb="1"/><line nr="139" mi="0" ci="11" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="2" ci="5" mb="1" cb="1"/><line nr="144" mi="0" ci="11" mb="0" cb="2"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="11" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="2"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="35" covered="770"/><counter type="BRANCH" missed="8" covered="38"/><counter type="LINE" missed="0" covered="69"/><counter type="COMPLEXITY" missed="13" covered="51"/><counter type="METHOD" missed="5" covered="36"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="35" covered="889"/><counter type="BRANCH" missed="8" covered="38"/><counter type="LINE" missed="0" covered="79"/><counter type="COMPLEXITY" missed="13" covered="60"/><counter type="METHOD" missed="5" covered="45"/><counter type="CLASS" missed="0" covered="5"/></package><package name="com/hexagonkt/store"><class name="com/hexagonkt/store/Store" sourcefilename="Store.kt"/><class name="com/hexagonkt/store/IndexOrder" sourcefilename="IndexOrder.kt"><method name="&lt;clinit&gt;" desc="()V" line="4"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/hexagonkt/store/Mapper$DefaultImpls" sourcefilename="Mapper.kt"><method name="toStore" desc="(Lcom/hexagonkt/store/Mapper;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="16"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromStore" desc="(Lcom/hexagonkt/store/Mapper;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="18"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/hexagonkt/store/Mapper" sourcefilename="Mapper.kt"/><class name="com/hexagonkt/store/Store$DefaultImpls" sourcefilename="Store.kt"><method name="createIndex" desc="(Lcom/hexagonkt/store/Store;Z[Lkotlin/Pair;)Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createIndex" desc="(Lcom/hexagonkt/store/Store;Z[Lkotlin/reflect/KProperty1;)Ljava/lang/String;" line="27"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insertMany" desc="(Lcom/hexagonkt/store/Store;[Ljava/lang/Object;)Ljava/util/List;" line="34"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceMany" desc="(Lcom/hexagonkt/store/Store;[Ljava/lang/Object;)Ljava/util/List;" line="45"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateOne" desc="(Lcom/hexagonkt/store/Store;Ljava/lang/Object;[Lkotlin/Pair;)Z" line="50"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findOne" desc="(Lcom/hexagonkt/store/Store;Ljava/util/Map;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findOne" desc="(Lcom/hexagonkt/store/Store;Ljava/util/Map;Ljava/util/List;)Ljava/util/Map;" line="66"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMany$default" desc="(Lcom/hexagonkt/store/Store;Ljava/util/Map;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/util/Map;ILjava/lang/Object;)Ljava/util/List;" line="68"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMany$default" desc="(Lcom/hexagonkt/store/Store;Ljava/util/Map;Ljava/util/List;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/util/Map;ILjava/lang/Object;)Ljava/util/List;" line="74"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAll" desc="(Lcom/hexagonkt/store/Store;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/util/Map;)Ljava/util/List;" line="85"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAll$default" desc="(Lcom/hexagonkt/store/Store;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/util/Map;ILjava/lang/Object;)Ljava/util/List;" line="81"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAll" desc="(Lcom/hexagonkt/store/Store;Ljava/util/List;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/util/Map;)Ljava/util/List;" line="92"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAll$default" desc="(Lcom/hexagonkt/store/Store;Ljava/util/List;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/util/Map;ILjava/lang/Object;)Ljava/util/List;" line="87"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="count$default" desc="(Lcom/hexagonkt/store/Store;Ljava/util/Map;ILjava/lang/Object;)J" line="94"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fields" desc="(Lcom/hexagonkt/store/Store;Ljava/util/Map;)Ljava/util/Map;" line="99"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fields" desc="(Lcom/hexagonkt/store/Store;[Lkotlin/Pair;)Ljava/util/Map;" line="102"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="import" desc="(Lcom/hexagonkt/store/Store;Ljava/io/File;)V" line="105"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="import" desc="(Lcom/hexagonkt/store/Store;Ljava/net/URL;)V" line="109"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="91" covered="258"/><counter type="LINE" missed="6" covered="26"/><counter type="COMPLEXITY" missed="4" covered="14"/><counter type="METHOD" missed="4" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Mapper.kt"><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IndexOrder.kt"><line nr="4" mi="6" ci="0" mb="0" cb="0"/><line nr="5" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Store.kt"><line nr="24" mi="23" ci="0" mb="0" cb="0"/><line nr="27" mi="28" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="11" mb="0" cb="0"/><line nr="63" mi="0" ci="18" mb="0" cb="0"/><line nr="66" mi="0" ci="20" mb="0" cb="0"/><line nr="68" mi="0" ci="16" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="17" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="15" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="16" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="0"/><line nr="94" mi="0" ci="9" mb="0" cb="0"/><line nr="99" mi="0" ci="19" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="7" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="7" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="91" covered="258"/><counter type="LINE" missed="6" covered="26"/><counter type="COMPLEXITY" missed="4" covered="14"/><counter type="METHOD" missed="4" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="106" covered="280"/><counter type="LINE" missed="8" covered="28"/><counter type="COMPLEXITY" missed="5" covered="16"/><counter type="METHOD" missed="5" covered="16"/><counter type="CLASS" missed="1" covered="2"/></package><counter type="INSTRUCTION" missed="141" covered="1169"/><counter type="BRANCH" missed="8" covered="38"/><counter type="LINE" missed="8" covered="107"/><counter type="COMPLEXITY" missed="18" covered="76"/><counter type="METHOD" missed="10" covered="61"/><counter type="CLASS" missed="1" covered="7"/></report>